<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.icecreamapp.model.dao.OrderDao">
    <insert id="insertOrder" parameterType="Order"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `order`
        (member_id,
         date,
         spoon,
         dryice,
         isforhere,
         price_sum,
         discount_sum,
         result_sum)
        VALUES (#{memberId},
                #{date},
                #{spoon},
                #{dryice},
                #{isForHere},
                #{priceSum},
                #{discountSum},
                #{resultSum})
    </insert>


    <select id="selectOrderByEmail" resultType="Order">
        SELECT id,
        member_id,
        date,
        spoon,
        dryice,
        price_sum
        FROM `order` where member_id=#{memberId}
        <if test="isRecent==true">
            LIMIT 5
        </if>
    </select>


    <select id="selectWithResultmap" resultMap="OrderAndOrderDetails">
        select o.id, o.date, o.spoon, o.dryice, o.price_sum, o.isforhere,
        od.id as od_id, od.order_id, od.product_id, od.quantity,
        m.email
        from `order` as o
        left join order_detail as od
        on o.id = od.order_id
        left join member as m
        on o.member_id = m.id
        <where>
            <if test="memberId!=0">
                AND o.member_id=#{memberId}
            </if>
            <if test="orderCon.orderId!=0">
                AND o.id=#{orderCon.orderId}
            </if>
        </where>
        <if test="orderCon.isRecent==true">
            LIMIT 10
        </if>
    </select>

    <resultMap id="OrderAndOrderDetails" type="OrderInfo">
        <id property="id" column="id"/>
        <result property="date" column="date"/>
        <result property="spoon" column="spoon"/>
        <result property="dryice" column="dryice"/>
        <result property="priceSum" column="price_sum"/>
        <result property="email" column="email"/>
        <collection property="details" ofType="OrderDetail">
            <id property="id" column="od_id"/>
            <result property="orderId" column="order_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
        </collection>
    </resultMap>


    <select id="selectDetails" parameterType="int" resultType="OrderDetail">
        select od.id, od.order_id, od.product_id, od.quantity, i.name as ice_name, i.img
        from order_detail as od left join icecream as i on od.product_id = i.id
        where order_id = #{o_id}
    </select>

    <resultMap id="detailResult" type="OrderInfo">
        <collection property="details" javaType="ArrayList" column="o_id" ofType="OrderDetail"
                    select="selectDetails"/>
    </resultMap>

    <select id="selectWithResultmap2" resultMap="detailResult">
        select o.id, o.date, o.spoon, o.dryice, o.price_sum, o.discount_sum, o.result_sum, o.isforhere, o.id as o_id

        , m.email
        from `order` as o
        left join member as m
        on o.member_id = m.id
        <where>
            <if test="memberId!=``">
                and o.member_id=#{memberId}
            </if>
            <if test="orderCon.orderId != 0">
                and o.id =#{orderCon.orderId}
            </if>
        </where>
        order by o.id desc
        <if test="orderCon.isRecent==true">
            limit 10
        </if>
    </select>

</mapper>